en:
  brand: Ethio
  tagline: A RESTful API for the Ethereum Blockchain
  status:
    ðŸš¨ WARNING! This **ALPHA** software.
    You are encouraged to explore it,
    but you are discouraged from depending on it in production yet. ðŸš¨

  nav:
    root: Ethio
    docs: Docs

  footer:
    email:
      name: Email
      subject: 'About Ethio: '

  home:
    nav:
      what: What
      why:  Why
      how:  How
      when: When
      who:  Who

    what:
      heading: What is Ethio?

      description:
        Ethio is a RESTful API with the primary goal of being a simple and humane way to get
        information from the Ethereum blockchain.

        The _RESTful_ part is important because it makes Ethio like most APIs that
        web developers are used to.

        In that way, Ethio is similar to
        [Stripe](https://stripe.com/docs/api){:target='_blank'},
        [Twilio](https://twilio.com/docs/usage/api){:target='_blank'},
        [GitHub](https://developer.github.com){:target='_blank'},
        [Instagram](https://instagram.com/developer){:target='_blank'},
        [DNSimple](https://developer.dnsimple.com/v2){:target='_blank'},
        and
        [Twitter](https://developer.twitter.com){:target='_blank'}
        APIs.

    why:
      heading: Why Ethio?

      description:
        Ethio is purpose built to be easy for web developers.
        Working with the Ethereum blockchain should as simple as any web API.
        If youâ€™ve ever used a RESTful API on the web (Twitter, Facebook, Intagram, etc),
        using Ethio will feel familiar.


        Ethio was born out of a frustration with the existing tools not being RESTful or open source.
        (Or neither!) Ethio comes from the idea that REST and open source are both important.


        The most common way that most people work with the Ethereum blockchain is some combination of

        [Etherscan](https://etherscan.io){:target='_blank'},
        [Web3](https://github.com/ethereum/web3.js){:target='_blank'},
        and
        [Geth](https://geth.ethereum.org){:target='_blank'}
        (or [Parity](https://parity.io)).

        None of which are RESTful, and all of which use a format called
        [JSON-RPC](https://en.wikipedia.org/wiki/JSON-RPC){:target='_blank'}
        (unlike most web APIs).


        [Infura](https://infura.io){:target='_blank'} has a REST-like API, but is not open source.
        Infura also suffers from the same functionality limitations as a raw Geth node,
        namely search / filtering / associations are somewhere between very inefficient to completely
        impossible when operating directly on the blockchain.


        If you are happy using Web3 / Infura / Etherscan, great! You should keep using them.
        RPC is a different mental model than REST, and some people really like that.

        But if youâ€™re looking for a RESTful experience that is like most other web APIs,
        then Ethio will soon be for the thing for you. Stay tunedâ€¦

    how:
      heading: How do you use Ethio?

      description:
        The primary design goal for Ethio is be a _humane_ API for the Ethereum blockchain.
        After all, it is _human_ developers that use APIs.
        Ethio aims to be friendly, simple, obvious, guessable, literate, and documented. Phew.


        Ethio places heavy importance on being a REST (and hypermedia!) API,
        so using it is all about URLs!
        Because Ethio is primarily a read-only API, all requests are made via `HTTP GET`.


        The response is always `JSON`, even if you donâ€™t set your `Accept:` header.
        Requests work with and without `.json` appended to the end of the path.
        For example, `/blocks/latest` and `/blocks/latest.json` both return a `JSON` response.


        Hereâ€™s an example request for the genesis block (the first block on the Ethereum blockchain). `curl https://api.ethio.app/blocks/0` and its response. For more details on API usage and responses, jump over to [the API documentation](/docs).


    when:
      heading: When can you use Ethio?

      description:
        Very soon!


        The **`ALPHA`** release will be out any day now (todayâ€™s date `2018-06-18`).
        The **`ALPHA`** release of Ethio will be very limited.
        It will start small and then grow iteratively.
        The first bit of functionality is being able to **`GET`** any single block.
        By block number, by block address (hash), or the latest block.


        The API will remain in **`ALPHA`** until all of the 5 major resources are in place.
        Blocks, Transactions, Wallets, Contracts, and Tokens.
        Then it will move into **`BETA`**.
        At which point, the focus will be bugs, performance, etc.
        During **`ALPHA`** and **`BETA`**, the semantics of the API (namely, keys in JSON responses)
        will very likely shift and get changed based on usage and feedback.
        Changes will be discussed and announced on
        [GitHub](https://github.com/ethiodotapp/ethio-api){:target='_blank'},
        [Twitter](https://twitter.com/ethiodotapp){:target='_blank'},
        and on the blog.

    who:
      heading: Who makes Ethio?

      description:
        Shane Becker is the creator of Ethio.

        Most recently, he was the Lead Web Developer at [Quantstamp](https://quantstamp.com){:target='_blank'}.

        In recent years, he organized [Farmhouse Conf](http://farmhouse.co/conf){:target='_blank'},
        in Hollywood, California, lived and traveled in
        [80 square feet of Volkswagen Vanagon](https://instagram.com/explore/tags/littlemisadventuretime){:target='_blank'},
        and [defeated cancer](https://instagram.com/explore/tags/shaneschemodays){:target='_blank'}.


        He has been designing and making websites for over two decades,
        and has been developing with Ruby and Rails for over a decade.
        Previously, he built products or worked with communites for
        [Happily](https://happily.io),
        [AT&T Interactive](https://yellowpages.com),
        [Engine Yard](https://engineyard.com),
        and
        [VMware]().

        He believes in a free and open internet, open standards, and open source software.

        He can be found on
        [Twitter](https://twitter.com/veganstraightedge){:target='_blank'},
        [Instagram](https://Instagram.com/veganstraightedge){:target='_blank'},
        [GitHub](https://github.com/veganstraightedge){:target='_blank'},
        and
        his [personal website](https://veganstraightedge.com){:target='_blank'}.
